
# OPERADOR 'IN' #

En Python el operador 'in' se utiliza para verificar si un elemento esta presente
en una secuencia (como listas, tuplas o cadenas) o en un diccionario. Es una forma
concisa y conveniente de hacer BÚSQUEDAS Y VALIDADIONES sin necesidad de bucles 
explícitos. Ejemplos de como utilizarlo y su sintaxis específica:

SINTAXIS BÁSICA 

 > elemento in secuencia

elemento: El valor que quieres verificar si está presente en la secuencia. 
secuencia: La lista, tupla, cadena de texto, o diccionario en el que buscas el elemento. 

EJEMPLOS DE USO

1.Con listas y tuplas

numero = 3
lista_numeros = [1, 2, 3, 4, 5]
resultado = numero in lista_numeros  # Esto devolverá True.

2.Con cadenas:

subcadena = "hola"
cadena = "hola mundo"
resultado = subcadena in cadena  # Esto devolverá True.

3.Con diccionarios:

clave = "nombre"
diccionario = {"nombre": "Jordi", "edad": 30}
resultado = clave in diccionario  # Esto devolverá True.

USOS PRÁCTICOS

# Control de flujo: Puedes usar 'in' en declaraciones 'if' para tomar decisiones
  basadas en la presencia o ausencia de un elemento en una secuencia. 

# Filtrado de datos: Combinado con listas de comprensión, 'in' puede filtrar 
  elementos de una secuencia basándose en su presencia en otra secuencia. 

# Validación de entradas: Es útil para verificar si el valor ingresado por un
  usuario se encuentra dentro de un conjunto permitido de valores. 

El operador 'in' es en definitiva indispensable en el queahcer diario de Python, sobre 
todo en Búsquedas y validaciones. 


